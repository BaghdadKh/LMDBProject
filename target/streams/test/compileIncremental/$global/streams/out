[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(C:\Users\Lenovo\Desktop\NEws\Mar\LMDB\LMDBProject\src\test\scala\bankTests\BankTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(bankTests.CreateAcountTest, bankTests.AddBalanceTest, bankTests.WithDrawTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(bankTests.CreateAcountTest, bankTests.AddBalanceTest, bankTests.WithDrawTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(C:\Users\Lenovo\Desktop\NEws\Mar\LMDB\LMDBProject\src\test\scala\bankTests\BankTest.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to C:\Users\Lenovo\Desktop\NEws\Mar\LMDB\LMDBProject\target\scala-2.12\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 4a5bd6a9 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes;C:\Users\Lenovo\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\Lenovo\Desktop\NEws\Mar\LMDB\LMDBProject\target\scala-2.12\test-classes;C:\Users\Lenovo\Desktop\NEws\Mar\LMDB\LMDBProject\target\scala-2.12\classes;C:\Users\Lenovo\.ivy2\cache\org.lmdbjava\lmdbjava\jars\lmdbjava-0.7.0.jar;C:\Users\Lenovo\.ivy2\cache\com.github.jnr\jnr-ffi\jars\jnr-ffi-2.1.9.jar;C:\Users\Lenovo\.ivy2\cache\org.ow2.asm\asm\jars\asm-5.0.3.jar;C:\Users\Lenovo\.ivy2\cache\org.ow2.asm\asm-commons\jars\asm-commons-5.0.3.jar;C:\Users\Lenovo\.ivy2\cache\org.ow2.asm\asm-tree\jars\asm-tree-5.0.3.jar;C:\Users\Lenovo\.ivy2\cache\org.ow2.asm\asm-analysis\jars\asm-analysis-5.0.3.jar;C:\Users\Lenovo\.ivy2\cache\org.ow2.asm\asm-util\jars\asm-util-5.0.3.jar;C:\Users\Lenovo\.ivy2\cache\com.github.jnr\jnr-a64asm\jars\jnr-a64asm-1.0.0.jar;C:\Users\Lenovo\.ivy2\cache\com.github.jnr\jnr-x86asm\jars\jnr-x86asm-1.0.2.jar;C:\Users\Lenovo\.ivy2\cache\com.github.jnr\jffi\jars\jffi-1.2.18-native.jar;C:\Users\Lenovo\.ivy2\cache\com.github.jnr\jffi\jars\jffi-1.2.18.jar;C:\Users\Lenovo\.ivy2\cache\com.github.jnr\jnr-constants\jars\jnr-constants-0.9.12.jar;C:\Users\Lenovo\.ivy2\cache\org.scalaz\scalaz-zio_2.12\jars\scalaz-zio_2.12-1.0-RC5.jar;C:\Users\Lenovo\.ivy2\cache\org.scalaz\scalaz-zio-stacktracer_2.12\jars\scalaz-zio-stacktracer_2.12-1.0-RC5.jar;C:\Users\Lenovo\.ivy2\cache\org.scalatest\scalatest_2.12\bundles\scalatest_2.12-3.0.5.jar;C:\Users\Lenovo\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.5.jar;C:\Users\Lenovo\.ivy2\cache\org.scala-lang\scala-reflect\jars\scala-reflect-2.12.8.jar;C:\Users\Lenovo\.ivy2\cache\org.scala-lang.modules\scala-xml_2.12\bundles\scala-xml_2.12-1.0.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 8.856925927 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bankTests.CreateAcountTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(bankTests.CreateAcountTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bankTests.CreateAcountTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bankTests.CreateAcountTest,ModifiedNames(changes = UsedName(DecidedWord,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(TheAfterWord,[Default]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(finalize,[Default]), UsedName(ResultOfStartWithWordForCollectedString,[Default]), UsedName(alert,[Default]), UsedName(assertResult,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(theSameInstanceAs,[Default]), UsedName(KeyWord,[Default]), UsedName(<=,[Default]), UsedName(<,[Default]), UsedName(!==,[Default]), UsedName(StringCanWrapperForVerb,[Default]), UsedName(execute$default$1,[Default]), UsedName(not,[Default]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(unconstrainedEquality,[Implicit]), UsedName(matchPattern,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(writable,[Default]), UsedName(registerTest,[Default]), UsedName(rerunner,[Default]), UsedName(startWith,[Default]), UsedName(ResultOfBeWordForCollectedArray,[Default]), UsedName(ItWord,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(IgnoreVerbString,[Default]), UsedName(assertCompiles,[Default]), UsedName(bankTests;CreateAcountTest;init;,[Default]), UsedName(fail,[Default]), UsedName(every,[Default]), UsedName(of,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(note,[Default]), UsedName(value,[Default]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(StringMustWrapperForVerb,[Default]), UsedName(ResultOfCollectedAny,[Default]), UsedName(hashCode,[Default]), UsedName(RegexWord,[Default]), UsedName(it,[Default]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(ResultOfHaveWordForCollectedExtent,[Default]), UsedName(testDataFor,[Default]), UsedName(compile,[Default]), UsedName(length,[Default]), UsedName(key,[Default]), UsedName(getClass,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(ResultOfEndWithWordForCollectedString,[Default]), UsedName(noneOf,[Default]), UsedName(suiteName,[Default]), UsedName(>,[Default]), UsedName(TheSameInstanceAsPhrase,[Default]), UsedName(thrownBy,[Default]), UsedName(testNames,[Default]), UsedName(run,[Default]), UsedName(decided,[Default]), UsedName(toString,[Default]), UsedName(readable,[Default]), UsedName(!=,[Default]), UsedName(ResultOfFullyMatchWordForString,[Default]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(theSameElementsInOrderAs,[Default]), UsedName(ItVerbString,[Default]), UsedName(have,[Default]), UsedName(assume,[Default]), UsedName(execute$default$3,[Default]), UsedName(ResultOfContainWordForCollectedAny,[Default]), UsedName(assertionsHelper,[Default]), UsedName(between,[Default]), UsedName(inOrderOnly,[Default]), UsedName(markup,[Default]), UsedName(HavePropertyMatcherGenerator,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(contain,[Default]), UsedName(execute$default$5,[Default]), UsedName(determined,[Default]), UsedName(notifyAll,[Default]), UsedName(inOrderElementsOf,[Default]), UsedName(endWith,[Default]), UsedName(yeOldeTestNames,[Default]), UsedName(exist,[Default]), UsedName(a,[Default]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(allElementsOf,[Default]), UsedName(ResultOfFullyMatchWordForCollectedString,[Default]), UsedName(>=,[Default]), UsedName(assertTypeError,[Default]), UsedName(include,[Default]), UsedName(ValueWord,[Default]), UsedName(atLeastOneElementOf,[Default]), UsedName(expectedTestCount,[Default]), UsedName(wait,[Default]), UsedName(assertThrows,[Default]), UsedName(clone,[Default]), UsedName(convertToStringShouldWrapper,[Implicit]), UsedName(trap,[Default]), UsedName(StringShouldWrapperForVerb,[Default]), UsedName(pending,[Default]), UsedName(CreateAcountTest,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(theSameElementsAs,[Default]), UsedName(they,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(execute$default$6,[Default]), UsedName(size,[Default]), UsedName(TheyVerbString,[Default]), UsedName(ResultOfEndWithWordForString,[Default]), UsedName(atMostOneElementOf,[Default]), UsedName(IgnoreVerbStringTaggedAs,[Default]), UsedName(RegexWrapper,[Default]), UsedName(noException,[Default]), UsedName(behavior,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(intercept,[Default]), UsedName(all,[Default]), UsedName(after,[Default]), UsedName(runNestedSuites,[Default]), UsedName(cancel,[Default]), UsedName(execute$default$7,[Default]), UsedName(sorted,[Default]), UsedName(typeCheck,[Default]), UsedName(exactly,[Default]), UsedName(StringShouldWrapper,[Default]), UsedName(empty,[Default]), UsedName(definedAt,[Default]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(TheyVerbStringTaggedAs,[Default]), UsedName(equals,[Default]), UsedName(no,[Default]), UsedName(##,[Default]), UsedName(ItVerbStringTaggedAs,[Default]), UsedName($isInstanceOf,[Default]), UsedName(NoArgTest,[Default]), UsedName(ignore,[Default]), UsedName(behave,[Default]), UsedName(eq,[Default]), UsedName(assert,[Default]), UsedName(DeterminedByEquivalence,[Default]), UsedName(runTests,[Default]), UsedName(fullyMatch,[Default]), UsedName(execute,[Default]), UsedName(synchronized,[Default]), UsedName(runTest,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(==,[Default]), UsedName(createCatchReporter,[Default]), UsedName(allOf,[Default]), UsedName(===,[Default]), UsedName(withFixture,[Default]), UsedName(DecidedByEquality,[Default]), UsedName(ResultOfBeWordForCollectedAny,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(inOrder,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(AnWord,[Default]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(suiteId,[Default]), UsedName(convertToAnyShouldWrapper,[Implicit]), UsedName(DeterminedWord,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(atMost,[Default]), UsedName(message,[Default]), UsedName(ResultOfHaveWordForExtent,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(oneOf,[Default]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(ResultOfStartWithWordForString,[Default]), UsedName(noElementsOf,[Default]), UsedName(ResultOfNotWordForCollectedAny,[Default]), UsedName(AnyShouldWrapper,[Default]), UsedName(info,[Default]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(execute$default$4,[Default]), UsedName(BehaviorWord,[Default]), UsedName(defaultEquality,[Default]), UsedName(an,[Default]), UsedName(styleName,[Default]), UsedName(the,[Default]), UsedName(regex,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(withClue,[Default]), UsedName(doCollected,[Default]), UsedName(ResultOfBeWordForAny,[Default]), UsedName(equal,[Default]), UsedName(execute$default$2,[Default]), UsedName(atMostOneOf,[Default]), UsedName(tags,[Default]), UsedName(isInstanceOf,[Default]), UsedName(nestedSuites,[Default]), UsedName(IgnoreWord,[Default]), UsedName(AWord,[Default]), UsedName(only,[Default]), UsedName(be,[Default]), UsedName(succeed,[Default]), UsedName(Equalizer,[Default]), UsedName(ResultOfIncludeWordForString,[Default]), UsedName(atLeastOneOf,[Default]), UsedName(TheyWord,[Default]), UsedName(InAndIgnoreMethods,[Default]), UsedName(oneElementOf,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(defined,[Default]), UsedName($init$,[Default]), UsedName(atLeast,[Default]), UsedName(InAndIgnoreMethodsAfterTaggedAs,[Default]), UsedName(PlusOrMinusWrapper,[Default]), UsedName(ResultOfIncludeWordForCollectedString,[Default]))) invalidates 1 classes due to The bankTests.CreateAcountTest has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(convertToStringCanWrapper,[Implicit]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(convertToEqualizer,[Implicit]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(convertToStringShouldWrapper,[Implicit]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(convertToAnyShouldWrapper,[Implicit]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(convertToStringMustWrapperForVerb,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(bankTests.CreateAcountTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bankTests.AddBalanceTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(bankTests.AddBalanceTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bankTests.AddBalanceTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bankTests.AddBalanceTest,ModifiedNames(changes = UsedName(DecidedWord,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(TheAfterWord,[Default]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(finalize,[Default]), UsedName(ResultOfStartWithWordForCollectedString,[Default]), UsedName(alert,[Default]), UsedName(assertResult,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(theSameInstanceAs,[Default]), UsedName(KeyWord,[Default]), UsedName(<=,[Default]), UsedName(<,[Default]), UsedName(!==,[Default]), UsedName(StringCanWrapperForVerb,[Default]), UsedName(execute$default$1,[Default]), UsedName(not,[Default]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(unconstrainedEquality,[Implicit]), UsedName(matchPattern,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(writable,[Default]), UsedName(registerTest,[Default]), UsedName(rerunner,[Default]), UsedName(startWith,[Default]), UsedName(ResultOfBeWordForCollectedArray,[Default]), UsedName(ItWord,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(IgnoreVerbString,[Default]), UsedName(assertCompiles,[Default]), UsedName(fail,[Default]), UsedName(every,[Default]), UsedName(of,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(note,[Default]), UsedName(value,[Default]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(StringMustWrapperForVerb,[Default]), UsedName(ResultOfCollectedAny,[Default]), UsedName(hashCode,[Default]), UsedName(RegexWord,[Default]), UsedName(it,[Default]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(ResultOfHaveWordForCollectedExtent,[Default]), UsedName(testDataFor,[Default]), UsedName(compile,[Default]), UsedName(length,[Default]), UsedName(key,[Default]), UsedName(getClass,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(ResultOfEndWithWordForCollectedString,[Default]), UsedName(noneOf,[Default]), UsedName(suiteName,[Default]), UsedName(>,[Default]), UsedName(TheSameInstanceAsPhrase,[Default]), UsedName(thrownBy,[Default]), UsedName(testNames,[Default]), UsedName(run,[Default]), UsedName(decided,[Default]), UsedName(toString,[Default]), UsedName(readable,[Default]), UsedName(!=,[Default]), UsedName(ResultOfFullyMatchWordForString,[Default]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(theSameElementsInOrderAs,[Default]), UsedName(ItVerbString,[Default]), UsedName(have,[Default]), UsedName(assume,[Default]), UsedName(execute$default$3,[Default]), UsedName(ResultOfContainWordForCollectedAny,[Default]), UsedName(assertionsHelper,[Default]), UsedName(between,[Default]), UsedName(inOrderOnly,[Default]), UsedName(markup,[Default]), UsedName(HavePropertyMatcherGenerator,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(contain,[Default]), UsedName(execute$default$5,[Default]), UsedName(determined,[Default]), UsedName(notifyAll,[Default]), UsedName(inOrderElementsOf,[Default]), UsedName(endWith,[Default]), UsedName(yeOldeTestNames,[Default]), UsedName(exist,[Default]), UsedName(a,[Default]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(allElementsOf,[Default]), UsedName(ResultOfFullyMatchWordForCollectedString,[Default]), UsedName(>=,[Default]), UsedName(assertTypeError,[Default]), UsedName(include,[Default]), UsedName(ValueWord,[Default]), UsedName(atLeastOneElementOf,[Default]), UsedName(expectedTestCount,[Default]), UsedName(wait,[Default]), UsedName(assertThrows,[Default]), UsedName(clone,[Default]), UsedName(convertToStringShouldWrapper,[Implicit]), UsedName(trap,[Default]), UsedName(StringShouldWrapperForVerb,[Default]), UsedName(pending,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(theSameElementsAs,[Default]), UsedName(they,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(execute$default$6,[Default]), UsedName(size,[Default]), UsedName(AddBalanceTest,[Default]), UsedName(TheyVerbString,[Default]), UsedName(ResultOfEndWithWordForString,[Default]), UsedName(atMostOneElementOf,[Default]), UsedName(IgnoreVerbStringTaggedAs,[Default]), UsedName(RegexWrapper,[Default]), UsedName(noException,[Default]), UsedName(behavior,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(intercept,[Default]), UsedName(all,[Default]), UsedName(after,[Default]), UsedName(runNestedSuites,[Default]), UsedName(cancel,[Default]), UsedName(execute$default$7,[Default]), UsedName(sorted,[Default]), UsedName(typeCheck,[Default]), UsedName(exactly,[Default]), UsedName(StringShouldWrapper,[Default]), UsedName(empty,[Default]), UsedName(definedAt,[Default]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(TheyVerbStringTaggedAs,[Default]), UsedName(equals,[Default]), UsedName(no,[Default]), UsedName(##,[Default]), UsedName(ItVerbStringTaggedAs,[Default]), UsedName($isInstanceOf,[Default]), UsedName(NoArgTest,[Default]), UsedName(ignore,[Default]), UsedName(behave,[Default]), UsedName(eq,[Default]), UsedName(assert,[Default]), UsedName(DeterminedByEquivalence,[Default]), UsedName(runTests,[Default]), UsedName(fullyMatch,[Default]), UsedName(execute,[Default]), UsedName(synchronized,[Default]), UsedName(runTest,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(==,[Default]), UsedName(createCatchReporter,[Default]), UsedName(allOf,[Default]), UsedName(===,[Default]), UsedName(withFixture,[Default]), UsedName(DecidedByEquality,[Default]), UsedName(ResultOfBeWordForCollectedAny,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(inOrder,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(AnWord,[Default]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(suiteId,[Default]), UsedName(convertToAnyShouldWrapper,[Implicit]), UsedName(DeterminedWord,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(atMost,[Default]), UsedName(message,[Default]), UsedName(ResultOfHaveWordForExtent,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(oneOf,[Default]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(ResultOfStartWithWordForString,[Default]), UsedName(noElementsOf,[Default]), UsedName(ResultOfNotWordForCollectedAny,[Default]), UsedName(AnyShouldWrapper,[Default]), UsedName(info,[Default]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(execute$default$4,[Default]), UsedName(BehaviorWord,[Default]), UsedName(defaultEquality,[Default]), UsedName(an,[Default]), UsedName(styleName,[Default]), UsedName(the,[Default]), UsedName(regex,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(withClue,[Default]), UsedName(doCollected,[Default]), UsedName(ResultOfBeWordForAny,[Default]), UsedName(equal,[Default]), UsedName(execute$default$2,[Default]), UsedName(atMostOneOf,[Default]), UsedName(tags,[Default]), UsedName(isInstanceOf,[Default]), UsedName(nestedSuites,[Default]), UsedName(IgnoreWord,[Default]), UsedName(AWord,[Default]), UsedName(only,[Default]), UsedName(be,[Default]), UsedName(succeed,[Default]), UsedName(bankTests;AddBalanceTest;init;,[Default]), UsedName(Equalizer,[Default]), UsedName(ResultOfIncludeWordForString,[Default]), UsedName(atLeastOneOf,[Default]), UsedName(TheyWord,[Default]), UsedName(InAndIgnoreMethods,[Default]), UsedName(oneElementOf,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(defined,[Default]), UsedName($init$,[Default]), UsedName(atLeast,[Default]), UsedName(InAndIgnoreMethodsAfterTaggedAs,[Default]), UsedName(PlusOrMinusWrapper,[Default]), UsedName(ResultOfIncludeWordForCollectedString,[Default]))) invalidates 1 classes due to The bankTests.AddBalanceTest has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(convertToStringCanWrapper,[Implicit]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(convertToEqualizer,[Implicit]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(convertToStringShouldWrapper,[Implicit]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(convertToAnyShouldWrapper,[Implicit]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(convertToStringMustWrapperForVerb,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(bankTests.AddBalanceTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bankTests.WithDrawTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(bankTests.WithDrawTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bankTests.WithDrawTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bankTests.WithDrawTest,ModifiedNames(changes = UsedName(DecidedWord,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(TheAfterWord,[Default]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(finalize,[Default]), UsedName(ResultOfStartWithWordForCollectedString,[Default]), UsedName(alert,[Default]), UsedName(assertResult,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(theSameInstanceAs,[Default]), UsedName(KeyWord,[Default]), UsedName(<=,[Default]), UsedName(<,[Default]), UsedName(!==,[Default]), UsedName(StringCanWrapperForVerb,[Default]), UsedName(execute$default$1,[Default]), UsedName(not,[Default]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(unconstrainedEquality,[Implicit]), UsedName(matchPattern,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(notify,[Default]), UsedName($asInstanceOf,[Default]), UsedName(writable,[Default]), UsedName(registerTest,[Default]), UsedName(rerunner,[Default]), UsedName(startWith,[Default]), UsedName(ResultOfBeWordForCollectedArray,[Default]), UsedName(ItWord,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(IgnoreVerbString,[Default]), UsedName(assertCompiles,[Default]), UsedName(fail,[Default]), UsedName(every,[Default]), UsedName(of,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(note,[Default]), UsedName(value,[Default]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(StringMustWrapperForVerb,[Default]), UsedName(ResultOfCollectedAny,[Default]), UsedName(hashCode,[Default]), UsedName(RegexWord,[Default]), UsedName(it,[Default]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(ResultOfHaveWordForCollectedExtent,[Default]), UsedName(testDataFor,[Default]), UsedName(compile,[Default]), UsedName(length,[Default]), UsedName(key,[Default]), UsedName(getClass,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(ResultOfEndWithWordForCollectedString,[Default]), UsedName(noneOf,[Default]), UsedName(suiteName,[Default]), UsedName(>,[Default]), UsedName(TheSameInstanceAsPhrase,[Default]), UsedName(thrownBy,[Default]), UsedName(testNames,[Default]), UsedName(run,[Default]), UsedName(decided,[Default]), UsedName(toString,[Default]), UsedName(readable,[Default]), UsedName(!=,[Default]), UsedName(ResultOfFullyMatchWordForString,[Default]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(theSameElementsInOrderAs,[Default]), UsedName(ItVerbString,[Default]), UsedName(have,[Default]), UsedName(assume,[Default]), UsedName(execute$default$3,[Default]), UsedName(ResultOfContainWordForCollectedAny,[Default]), UsedName(assertionsHelper,[Default]), UsedName(between,[Default]), UsedName(inOrderOnly,[Default]), UsedName(markup,[Default]), UsedName(HavePropertyMatcherGenerator,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(contain,[Default]), UsedName(execute$default$5,[Default]), UsedName(determined,[Default]), UsedName(notifyAll,[Default]), UsedName(inOrderElementsOf,[Default]), UsedName(endWith,[Default]), UsedName(yeOldeTestNames,[Default]), UsedName(exist,[Default]), UsedName(a,[Default]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(allElementsOf,[Default]), UsedName(ResultOfFullyMatchWordForCollectedString,[Default]), UsedName(>=,[Default]), UsedName(assertTypeError,[Default]), UsedName(include,[Default]), UsedName(ValueWord,[Default]), UsedName(atLeastOneElementOf,[Default]), UsedName(expectedTestCount,[Default]), UsedName(wait,[Default]), UsedName(assertThrows,[Default]), UsedName(clone,[Default]), UsedName(convertToStringShouldWrapper,[Implicit]), UsedName(trap,[Default]), UsedName(StringShouldWrapperForVerb,[Default]), UsedName(pending,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(theSameElementsAs,[Default]), UsedName(they,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(execute$default$6,[Default]), UsedName(bankTests;WithDrawTest;init;,[Default]), UsedName(size,[Default]), UsedName(TheyVerbString,[Default]), UsedName(ResultOfEndWithWordForString,[Default]), UsedName(atMostOneElementOf,[Default]), UsedName(IgnoreVerbStringTaggedAs,[Default]), UsedName(RegexWrapper,[Default]), UsedName(noException,[Default]), UsedName(behavior,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(intercept,[Default]), UsedName(all,[Default]), UsedName(after,[Default]), UsedName(runNestedSuites,[Default]), UsedName(cancel,[Default]), UsedName(execute$default$7,[Default]), UsedName(sorted,[Default]), UsedName(typeCheck,[Default]), UsedName(exactly,[Default]), UsedName(StringShouldWrapper,[Default]), UsedName(empty,[Default]), UsedName(definedAt,[Default]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(TheyVerbStringTaggedAs,[Default]), UsedName(equals,[Default]), UsedName(no,[Default]), UsedName(##,[Default]), UsedName(ItVerbStringTaggedAs,[Default]), UsedName($isInstanceOf,[Default]), UsedName(NoArgTest,[Default]), UsedName(ignore,[Default]), UsedName(behave,[Default]), UsedName(eq,[Default]), UsedName(assert,[Default]), UsedName(DeterminedByEquivalence,[Default]), UsedName(runTests,[Default]), UsedName(WithDrawTest,[Default]), UsedName(fullyMatch,[Default]), UsedName(execute,[Default]), UsedName(synchronized,[Default]), UsedName(runTest,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(==,[Default]), UsedName(createCatchReporter,[Default]), UsedName(allOf,[Default]), UsedName(===,[Default]), UsedName(withFixture,[Default]), UsedName(DecidedByEquality,[Default]), UsedName(ResultOfBeWordForCollectedAny,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(inOrder,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(AnWord,[Default]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(suiteId,[Default]), UsedName(convertToAnyShouldWrapper,[Implicit]), UsedName(DeterminedWord,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(atMost,[Default]), UsedName(message,[Default]), UsedName(ResultOfHaveWordForExtent,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(oneOf,[Default]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(ResultOfStartWithWordForString,[Default]), UsedName(noElementsOf,[Default]), UsedName(ResultOfNotWordForCollectedAny,[Default]), UsedName(AnyShouldWrapper,[Default]), UsedName(info,[Default]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(execute$default$4,[Default]), UsedName(BehaviorWord,[Default]), UsedName(defaultEquality,[Default]), UsedName(an,[Default]), UsedName(styleName,[Default]), UsedName(the,[Default]), UsedName(regex,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(withClue,[Default]), UsedName(doCollected,[Default]), UsedName(ResultOfBeWordForAny,[Default]), UsedName(equal,[Default]), UsedName(execute$default$2,[Default]), UsedName(atMostOneOf,[Default]), UsedName(tags,[Default]), UsedName(isInstanceOf,[Default]), UsedName(nestedSuites,[Default]), UsedName(IgnoreWord,[Default]), UsedName(AWord,[Default]), UsedName(only,[Default]), UsedName(be,[Default]), UsedName(succeed,[Default]), UsedName(Equalizer,[Default]), UsedName(ResultOfIncludeWordForString,[Default]), UsedName(atLeastOneOf,[Default]), UsedName(TheyWord,[Default]), UsedName(InAndIgnoreMethods,[Default]), UsedName(oneElementOf,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(defined,[Default]), UsedName($init$,[Default]), UsedName(atLeast,[Default]), UsedName(InAndIgnoreMethodsAfterTaggedAs,[Default]), UsedName(PlusOrMinusWrapper,[Default]), UsedName(ResultOfIncludeWordForCollectedString,[Default]))) invalidates 1 classes due to The bankTests.WithDrawTest has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(convertToStringCanWrapper,[Implicit]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(convertToEqualizer,[Implicit]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(convertToStringShouldWrapper,[Implicit]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(convertToAnyShouldWrapper,[Implicit]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(convertToStringMustWrapperForVerb,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(bankTests.WithDrawTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
